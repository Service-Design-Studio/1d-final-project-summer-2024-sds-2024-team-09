{"ast":null,"code":"var _jsxFileName = \"/Users/jingkaitan/Library/CloudStorage/OneDrive-SingaporeUniversityofTechnologyandDesign/GitHub-Cloud/1d-final-project-summer-2024-sds-2024-team-09/agora-monitoring/src/components/CameraPage.js\";\nimport React from 'react';\nimport AgoraRTC from 'agora-rtc-sdk-ng';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraPage = () => {\n  let rtc = {\n    localAudioTrack: null,\n    localVideoTrack: null,\n    client: null\n  };\n  let APP_ID = \"fa3a10495b62421c8f7179b868b65feb\";\n  let TOKEN = \"007eJxTYLhw2qsiYlPR9bX7z84//HTdls/xef8aJ5xff6eMN2oZy5NmBYa0RONEQwMTS9MkMyMTI8NkizRzQ3PLJAsziyQz07TUpI0deWkNgYwMq1VqWBgZIBDEZ2NISqzMTaxgYAAA5SokEA==\";\n  let CHANNEL = \"baymax\";\n  let UID = \"123456\";\n  const handleJoinAsHost = async () => {\n    rtc.client = AgoraRTC.createClient({\n      mode: \"live\",\n      codec: \"vp8\",\n      clientRoleOptions: {\n        level: AudienceLatencyLevelType.AUDIENCE_LEVEL_LOW_LATENCY\n      }\n    });\n    try {\n      rtc.client.setClientRole('host');\n      console.log(\"APP_ID\", APP_ID, \"CHANNEL\", CHANNEL);\n      await rtc.client.join(APP_ID, CHANNEL, TOKEN, UID);\n      // Create an audio track from the audio sampled by a microphone.\n      rtc.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n      // Create a video track from the video captured by a camera.\n      rtc.localVideoTrack = await AgoraRTC.createCameraVideoTrack();\n      // Publish the local audio and video tracks to the channel. \n      await rtc.client.publish([rtc.localAudioTrack, rtc.localVideoTrack]);\n      // Dynamically create a container in the form of a DIV element for playing the remote video track.\n      const localPlayerContainer = document.createElement('div');\n      // Specify the ID of the DIV container. You can use the uid of the local user.\n      localPlayerContainer.id = UID;\n      localPlayerContainer.textContent = 'Local user ' + UID;\n      localPlayerContainer.style.width = '640px';\n      localPlayerContainer.style.height = '480px';\n      document.body.append(localPlayerContainer);\n      rtc.localVideoTrack.play(localPlayerContainer);\n      console.log('Host joined successfully!');\n    } catch (error) {\n      console.error('Failed to join as host:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Camera Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoinAsHost,\n      children: \"Join as Host\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_c = CameraPage;\nexport default CameraPage;\nvar _c;\n$RefreshReg$(_c, \"CameraPage\");","map":{"version":3,"names":["React","AgoraRTC","jsxDEV","_jsxDEV","CameraPage","rtc","localAudioTrack","localVideoTrack","client","APP_ID","TOKEN","CHANNEL","UID","handleJoinAsHost","createClient","mode","codec","clientRoleOptions","level","AudienceLatencyLevelType","AUDIENCE_LEVEL_LOW_LATENCY","setClientRole","console","log","join","createMicrophoneAudioTrack","createCameraVideoTrack","publish","localPlayerContainer","document","createElement","id","textContent","style","width","height","body","append","play","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jingkaitan/Library/CloudStorage/OneDrive-SingaporeUniversityofTechnologyandDesign/GitHub-Cloud/1d-final-project-summer-2024-sds-2024-team-09/agora-monitoring/src/components/CameraPage.js"],"sourcesContent":["import React from 'react';\nimport AgoraRTC from 'agora-rtc-sdk-ng';\n\n\nconst CameraPage = () => {\n\n    let rtc = {\n        localAudioTrack: null,\n        localVideoTrack: null,\n        client: null,\n    };\n\n    let APP_ID = \"fa3a10495b62421c8f7179b868b65feb\";\n    let TOKEN = \"007eJxTYLhw2qsiYlPR9bX7z84//HTdls/xef8aJ5xff6eMN2oZy5NmBYa0RONEQwMTS9MkMyMTI8NkizRzQ3PLJAsziyQz07TUpI0deWkNgYwMq1VqWBgZIBDEZ2NISqzMTaxgYAAA5SokEA==\";\n    let CHANNEL = \"baymax\";\n    let UID = \"123456\";\n\n    const handleJoinAsHost = async () => {\n        rtc.client = AgoraRTC.createClient({\n            mode: \"live\",\n            codec: \"vp8\",\n            clientRoleOptions: {\n                level: AudienceLatencyLevelType.AUDIENCE_LEVEL_LOW_LATENCY\n            }\n        });\n        try {\n            rtc.client.setClientRole('host');\n            console.log(\"APP_ID\", APP_ID, \"CHANNEL\", CHANNEL,)\n            await rtc.client.join(APP_ID, CHANNEL, TOKEN, UID);\n            // Create an audio track from the audio sampled by a microphone.\n            rtc.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n            // Create a video track from the video captured by a camera.\n            rtc.localVideoTrack = await AgoraRTC.createCameraVideoTrack();\n            // Publish the local audio and video tracks to the channel. \n            await rtc.client.publish([rtc.localAudioTrack, rtc.localVideoTrack]);\n            // Dynamically create a container in the form of a DIV element for playing the remote video track.\n            const localPlayerContainer = document.createElement('div');\n            // Specify the ID of the DIV container. You can use the uid of the local user.\n            localPlayerContainer.id = UID;\n            localPlayerContainer.textContent = 'Local user ' + UID;\n            localPlayerContainer.style.width = '640px';\n            localPlayerContainer.style.height = '480px';\n            document.body.append(localPlayerContainer);\n\n            rtc.localVideoTrack.play(localPlayerContainer);\n\n            console.log('Host joined successfully!');\n        } catch (error) {\n            console.error('Failed to join as host:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Camera Page</h1>\n            <button onClick={handleJoinAsHost}>Join as Host</button>\n        </div>\n    );\n};\n\nexport default CameraPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAErB,IAAIC,GAAG,GAAG;IACNC,eAAe,EAAE,IAAI;IACrBC,eAAe,EAAE,IAAI;IACrBC,MAAM,EAAE;EACZ,CAAC;EAED,IAAIC,MAAM,GAAG,kCAAkC;EAC/C,IAAIC,KAAK,GAAG,qJAAqJ;EACjK,IAAIC,OAAO,GAAG,QAAQ;EACtB,IAAIC,GAAG,GAAG,QAAQ;EAElB,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjCR,GAAG,CAACG,MAAM,GAAGP,QAAQ,CAACa,YAAY,CAAC;MAC/BC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,KAAK;MACZC,iBAAiB,EAAE;QACfC,KAAK,EAAEC,wBAAwB,CAACC;MACpC;IACJ,CAAC,CAAC;IACF,IAAI;MACAf,GAAG,CAACG,MAAM,CAACa,aAAa,CAAC,MAAM,CAAC;MAChCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEd,MAAM,EAAE,SAAS,EAAEE,OAAQ,CAAC;MAClD,MAAMN,GAAG,CAACG,MAAM,CAACgB,IAAI,CAACf,MAAM,EAAEE,OAAO,EAAED,KAAK,EAAEE,GAAG,CAAC;MAClD;MACAP,GAAG,CAACC,eAAe,GAAG,MAAML,QAAQ,CAACwB,0BAA0B,CAAC,CAAC;MACjE;MACApB,GAAG,CAACE,eAAe,GAAG,MAAMN,QAAQ,CAACyB,sBAAsB,CAAC,CAAC;MAC7D;MACA,MAAMrB,GAAG,CAACG,MAAM,CAACmB,OAAO,CAAC,CAACtB,GAAG,CAACC,eAAe,EAAED,GAAG,CAACE,eAAe,CAAC,CAAC;MACpE;MACA,MAAMqB,oBAAoB,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC1D;MACAF,oBAAoB,CAACG,EAAE,GAAGnB,GAAG;MAC7BgB,oBAAoB,CAACI,WAAW,GAAG,aAAa,GAAGpB,GAAG;MACtDgB,oBAAoB,CAACK,KAAK,CAACC,KAAK,GAAG,OAAO;MAC1CN,oBAAoB,CAACK,KAAK,CAACE,MAAM,GAAG,OAAO;MAC3CN,QAAQ,CAACO,IAAI,CAACC,MAAM,CAACT,oBAAoB,CAAC;MAE1CvB,GAAG,CAACE,eAAe,CAAC+B,IAAI,CAACV,oBAAoB,CAAC;MAE9CN,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC5C,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZjB,OAAO,CAACiB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,oBACIpC,OAAA;IAAAqC,QAAA,gBACIrC,OAAA;MAAAqC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzC,OAAA;MAAQ0C,OAAO,EAAEhC,gBAAiB;MAAA2B,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEd,CAAC;AAACE,EAAA,GAtDI1C,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}