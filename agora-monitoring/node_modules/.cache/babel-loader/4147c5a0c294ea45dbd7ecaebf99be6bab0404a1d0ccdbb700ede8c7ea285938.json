{"ast":null,"code":"var _jsxFileName = \"/Users/jingkaitan/Library/CloudStorage/OneDrive-SingaporeUniversityofTechnologyandDesign/GitHub-Cloud/1d-final-project-summer-2024-sds-2024-team-09/agora-monitoring/src/components/CameraBroadcastPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport AgoraRTC, { AudienceLatencyLevelType } from 'agora-rtc-sdk-ng';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraBroadcastPage = () => {\n  _s();\n  useEffect(() => {\n    let rtc = {\n      localAudioTrack: null,\n      localVideoTrack: null,\n      client: null\n    };\n    const APP_ID = process.env.REACT_APP_APP_ID;\n    const TOKEN = process.env.REACT_APP_TOKEN;\n    const CHANNEL = process.env.REACT_APP_CHANNEL;\n    const joinChannel = async () => {\n      rtc.client = AgoraRTC.createClient({\n        mode: \"live\",\n        codec: \"vp8\"\n      });\n      try {\n        rtc.client.setClientRole(\"audience\", {\n          level: AudienceLatencyLevelType.AUDIENCE_LEVEL_LOW_LATENCY\n        });\n        console.log(\"APP_ID\", APP_ID, \"CHANNEL\", CHANNEL);\n        const new_id = Math.floor(Math.random() * 1000000);\n        console.log(\"new_id\", new_id);\n        await rtc.client.join(APP_ID, CHANNEL, TOKEN, new_id);\n        rtc.client.on(\"user-published\", async (user, mediaType) => {\n          console.log(\"user-published\", user, mediaType);\n          await rtc.client.subscribe(user, mediaType);\n          console.log(\"subscribe success\");\n          if (mediaType === \"video\") {\n            const remoteVideoTrack = user.videoTrack;\n            const remotePlayerContainer = document.createElement(\"div\");\n            remotePlayerContainer.id = user.uid.toString();\n            remotePlayerContainer.textContent = \"Remote user \" + user.uid.toString();\n            remotePlayerContainer.style.width = \"640px\";\n            remotePlayerContainer.style.height = \"480px\";\n            document.body.append(remotePlayerContainer);\n            remoteVideoTrack.play(remotePlayerContainer);\n          }\n          if (mediaType === \"audio\") {\n            const remoteAudioTrack = user.audioTrack;\n            remoteAudioTrack.play();\n          }\n        });\n        rtc.client.on(\"user-unpublished\", user => {\n          console.log(\"user-unpublished\", user);\n          const remotePlayerContainer = document.getElementById(user.uid.toString());\n          if (remotePlayerContainer) {\n            remotePlayerContainer.remove();\n          }\n        });\n      } catch (error) {\n        console.error('Failed to join as audience:', error);\n      }\n    };\n\n    // Ensure the joinChannel function is available in the component scope\n    window.joinChannel = joinChannel;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Camera Broadcast Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.joinChannel(),\n      children: \"Watch the broadcast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraBroadcastPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CameraBroadcastPage;\nexport default CameraBroadcastPage;\nvar _c;\n$RefreshReg$(_c, \"CameraBroadcastPage\");","map":{"version":3,"names":["React","useEffect","AgoraRTC","AudienceLatencyLevelType","jsxDEV","_jsxDEV","CameraBroadcastPage","_s","rtc","localAudioTrack","localVideoTrack","client","APP_ID","process","env","REACT_APP_APP_ID","TOKEN","REACT_APP_TOKEN","CHANNEL","REACT_APP_CHANNEL","joinChannel","createClient","mode","codec","setClientRole","level","AUDIENCE_LEVEL_LOW_LATENCY","console","log","new_id","Math","floor","random","join","on","user","mediaType","subscribe","remoteVideoTrack","videoTrack","remotePlayerContainer","document","createElement","id","uid","toString","textContent","style","width","height","body","append","play","remoteAudioTrack","audioTrack","getElementById","remove","error","window","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jingkaitan/Library/CloudStorage/OneDrive-SingaporeUniversityofTechnologyandDesign/GitHub-Cloud/1d-final-project-summer-2024-sds-2024-team-09/agora-monitoring/src/components/CameraBroadcastPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport AgoraRTC, { AudienceLatencyLevelType } from 'agora-rtc-sdk-ng';\n\nconst CameraBroadcastPage = () => {\n    useEffect(() => {\n        let rtc = {\n            localAudioTrack: null,\n            localVideoTrack: null,\n            client: null,\n        };\n\n        const APP_ID = process.env.REACT_APP_APP_ID;\n        const TOKEN = process.env.REACT_APP_TOKEN;\n        const CHANNEL = process.env.REACT_APP_CHANNEL;\n\n        const joinChannel = async () => {\n            rtc.client = AgoraRTC.createClient({\n                mode: \"live\",\n                codec: \"vp8\",\n            });\n\n            try {\n                rtc.client.setClientRole(\"audience\", {\n                    level: AudienceLatencyLevelType.AUDIENCE_LEVEL_LOW_LATENCY,\n                });\n\n                console.log(\"APP_ID\", APP_ID, \"CHANNEL\", CHANNEL);\n                const new_id = Math.floor(Math.random() * 1000000);\n                console.log(\"new_id\", new_id);\n                await rtc.client.join(APP_ID, CHANNEL, TOKEN, new_id);\n\n                rtc.client.on(\"user-published\", async (user, mediaType) => {\n                    console.log(\"user-published\", user, mediaType);\n                    await rtc.client.subscribe(user, mediaType);\n                    console.log(\"subscribe success\");\n\n                    if (mediaType === \"video\") {\n                        const remoteVideoTrack = user.videoTrack;\n                        const remotePlayerContainer = document.createElement(\"div\");\n                        remotePlayerContainer.id = user.uid.toString();\n                        remotePlayerContainer.textContent = \"Remote user \" + user.uid.toString();\n                        remotePlayerContainer.style.width = \"640px\";\n                        remotePlayerContainer.style.height = \"480px\";\n                        document.body.append(remotePlayerContainer);\n\n                        remoteVideoTrack.play(remotePlayerContainer);\n                    }\n\n                    if (mediaType === \"audio\") {\n                        const remoteAudioTrack = user.audioTrack;\n                        remoteAudioTrack.play();\n                    }\n                });\n\n                rtc.client.on(\"user-unpublished\", (user) => {\n                    console.log(\"user-unpublished\", user);\n                    const remotePlayerContainer = document.getElementById(user.uid.toString());\n                    if (remotePlayerContainer) {\n                        remotePlayerContainer.remove();\n                    }\n                });\n            } catch (error) {\n                console.error('Failed to join as audience:', error);\n            }\n        };\n\n        // Ensure the joinChannel function is available in the component scope\n        window.joinChannel = joinChannel;\n    }, []);\n\n    return (\n        <div>\n            <h1>Camera Broadcast Page</h1>\n            <button onClick={() => window.joinChannel()}>Watch the broadcast</button>\n        </div>\n    );\n};\n\nexport default CameraBroadcastPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}