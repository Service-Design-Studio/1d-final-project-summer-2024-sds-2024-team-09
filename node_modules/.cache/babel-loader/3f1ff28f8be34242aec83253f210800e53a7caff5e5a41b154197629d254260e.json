{"ast":null,"code":"var _jsxFileName = \"/Users/jingkaitan/Library/CloudStorage/OneDrive-SingaporeUniversityofTechnologyandDesign/GitHub-Cloud/1d-final-project-summer-2024-sds-2024-team-09/app/javascript/components/CameraBroadcastPage.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nimport React, { useEffect, useState } from 'react';\nimport AgoraRTC, { AudienceLatencyLevelType } from 'agora-rtc-sdk-ng';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst CameraBroadcastPage = () => {\n  const _useState = useState({\n      localAudioTrack: null,\n      localVideoTrack: null,\n      client: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    rtc = _useState2[0],\n    setRtc = _useState2[1];\n  const _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    remotePlayerContainer = _useState4[0],\n    setRemotePlayerContainer = _useState4[1];\n  useEffect(() => {\n    const APP_ID = process.env.REACT_APP_APP_ID;\n    const TOKEN = process.env.REACT_APP_TOKEN;\n    const CHANNEL = process.env.REACT_APP_CHANNEL;\n    const joinChannel = async () => {\n      const client = AgoraRTC.createClient({\n        mode: \"live\",\n        codec: \"vp8\"\n      });\n      try {\n        client.setClientRole(\"audience\", {\n          level: AudienceLatencyLevelType.AUDIENCE_LEVEL_LOW_LATENCY\n        });\n        console.log(\"APP_ID\", APP_ID, \"CHANNEL\", CHANNEL);\n        const new_id = Math.floor(Math.random() * 1000000);\n        console.log(\"new_id\", new_id);\n        await client.join(APP_ID, CHANNEL, TOKEN, new_id);\n        client.on(\"user-published\", async (user, mediaType) => {\n          console.log(\"user-published\", user, mediaType);\n          await client.subscribe(user, mediaType);\n          console.log(\"subscribe success\");\n          if (mediaType === \"video\") {\n            const remoteVideoTrack = user.videoTrack;\n\n            // Remove existing container if it exists\n            if (remotePlayerContainer) {\n              remotePlayerContainer.remove();\n            }\n\n            // Create a new container\n            const newRemotePlayerContainer = document.createElement(\"div\");\n            newRemotePlayerContainer.id = user.uid.toString();\n            newRemotePlayerContainer.textContent = \"Remote user \" + user.uid.toString();\n            newRemotePlayerContainer.style.width = \"640px\";\n            newRemotePlayerContainer.style.height = \"480px\";\n            document.body.append(newRemotePlayerContainer);\n\n            // Play the remote video track\n            remoteVideoTrack.play(newRemotePlayerContainer);\n\n            // Update state with the new container\n            setRemotePlayerContainer(newRemotePlayerContainer);\n          }\n          if (mediaType === \"audio\") {\n            const remoteAudioTrack = user.audioTrack;\n            remoteAudioTrack.play();\n          }\n        });\n        client.on(\"user-unpublished\", user => {\n          console.log(\"user-unpublished\", user);\n          if (remotePlayerContainer && remotePlayerContainer.id === user.uid.toString()) {\n            remotePlayerContainer.remove();\n            setRemotePlayerContainer(null);\n          }\n        });\n        setRtc(_objectSpread(_objectSpread({}, rtc), {}, {\n          client\n        }));\n      } catch (error) {\n        console.error('Failed to join as audience:', error);\n      }\n    };\n    const leaveChannel = async () => {\n      if (rtc.client) {\n        await rtc.client.leave();\n        rtc.client.removeAllListeners();\n\n        // Remove the remote player container if it exists\n        if (remotePlayerContainer) {\n          remotePlayerContainer.remove();\n          setRemotePlayerContainer(null);\n        }\n        setRtc(_objectSpread(_objectSpread({}, rtc), {}, {\n          client: null\n        }));\n        console.log(\"Left the channel successfully\");\n      }\n    };\n\n    // Ensure the functions are available in the component scope\n    window.joinChannel = joinChannel;\n    window.leaveChannel = leaveChannel;\n  }, [rtc, remotePlayerContainer]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Camera Broadcast Page\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => window.joinChannel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Watch the broadcast\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => window.leaveChannel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Leave the broadcast\"));\n};\nexport default CameraBroadcastPage;","map":{"version":3,"names":["React","useEffect","useState","AgoraRTC","AudienceLatencyLevelType","CameraBroadcastPage","_useState","localAudioTrack","localVideoTrack","client","_useState2","_slicedToArray","rtc","setRtc","_useState3","_useState4","remotePlayerContainer","setRemotePlayerContainer","APP_ID","process","env","REACT_APP_APP_ID","TOKEN","REACT_APP_TOKEN","CHANNEL","REACT_APP_CHANNEL","joinChannel","createClient","mode","codec","setClientRole","level","AUDIENCE_LEVEL_LOW_LATENCY","console","log","new_id","Math","floor","random","join","on","user","mediaType","subscribe","remoteVideoTrack","videoTrack","remove","newRemotePlayerContainer","document","createElement","id","uid","toString","textContent","style","width","height","body","append","play","remoteAudioTrack","audioTrack","_objectSpread","error","leaveChannel","leave","removeAllListeners","window","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/jingkaitan/Library/CloudStorage/OneDrive-SingaporeUniversityofTechnologyandDesign/GitHub-Cloud/1d-final-project-summer-2024-sds-2024-team-09/app/javascript/components/CameraBroadcastPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AgoraRTC, { AudienceLatencyLevelType } from 'agora-rtc-sdk-ng';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst CameraBroadcastPage = () => {\n    const [rtc, setRtc] = useState({\n        localAudioTrack: null,\n        localVideoTrack: null,\n        client: null,\n    });\n\n    const [remotePlayerContainer, setRemotePlayerContainer] = useState(null);\n\n    useEffect(() => {\n        const APP_ID = process.env.REACT_APP_APP_ID;\n        const TOKEN = process.env.REACT_APP_TOKEN;\n        const CHANNEL = process.env.REACT_APP_CHANNEL;\n\n        const joinChannel = async () => {\n            const client = AgoraRTC.createClient({\n                mode: \"live\",\n                codec: \"vp8\",\n            });\n\n            try {\n                client.setClientRole(\"audience\", {\n                    level: AudienceLatencyLevelType.AUDIENCE_LEVEL_LOW_LATENCY,\n                });\n\n                console.log(\"APP_ID\", APP_ID, \"CHANNEL\", CHANNEL);\n                const new_id = Math.floor(Math.random() * 1000000);\n                console.log(\"new_id\", new_id);\n                await client.join(APP_ID, CHANNEL, TOKEN, new_id);\n\n                client.on(\"user-published\", async (user, mediaType) => {\n                    console.log(\"user-published\", user, mediaType);\n                    await client.subscribe(user, mediaType);\n                    console.log(\"subscribe success\");\n\n                    if (mediaType === \"video\") {\n                        const remoteVideoTrack = user.videoTrack;\n\n                        // Remove existing container if it exists\n                        if (remotePlayerContainer) {\n                            remotePlayerContainer.remove();\n                        }\n\n                        // Create a new container\n                        const newRemotePlayerContainer = document.createElement(\"div\");\n                        newRemotePlayerContainer.id = user.uid.toString();\n                        newRemotePlayerContainer.textContent = \"Remote user \" + user.uid.toString();\n                        newRemotePlayerContainer.style.width = \"640px\";\n                        newRemotePlayerContainer.style.height = \"480px\";\n                        document.body.append(newRemotePlayerContainer);\n\n                        // Play the remote video track\n                        remoteVideoTrack.play(newRemotePlayerContainer);\n\n                        // Update state with the new container\n                        setRemotePlayerContainer(newRemotePlayerContainer);\n                    }\n\n                    if (mediaType === \"audio\") {\n                        const remoteAudioTrack = user.audioTrack;\n                        remoteAudioTrack.play();\n                    }\n                });\n\n                client.on(\"user-unpublished\", (user) => {\n                    console.log(\"user-unpublished\", user);\n                    if (remotePlayerContainer && remotePlayerContainer.id === user.uid.toString()) {\n                        remotePlayerContainer.remove();\n                        setRemotePlayerContainer(null);\n                    }\n                });\n\n                setRtc({ ...rtc, client });\n            } catch (error) {\n                console.error('Failed to join as audience:', error);\n            }\n        };\n\n        const leaveChannel = async () => {\n            if (rtc.client) {\n                await rtc.client.leave();\n                rtc.client.removeAllListeners();\n\n                // Remove the remote player container if it exists\n                if (remotePlayerContainer) {\n                    remotePlayerContainer.remove();\n                    setRemotePlayerContainer(null);\n                }\n\n                setRtc({ ...rtc, client: null });\n\n                console.log(\"Left the channel successfully\");\n            }\n        };\n\n        // Ensure the functions are available in the component scope\n        window.joinChannel = joinChannel;\n        window.leaveChannel = leaveChannel;\n    }, [rtc, remotePlayerContainer]);\n\n    return (\n        <div>\n            <h1>Camera Broadcast Page</h1>\n            <button onClick={() => window.joinChannel()}>Watch the broadcast</button>\n            <button onClick={() => window.leaveChannel()}>Leave the broadcast</button>\n        </div>\n    );\n};\n\nexport default CameraBroadcastPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}